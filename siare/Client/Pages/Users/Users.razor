@page "/users"
@using siare.Shared.Entities
@inject HttpClient Http

<h1>Users</h1>

@if (exceptionMessage != null)
{
  <p><em>Error: @exceptionMessage</em></p>
}
else if (users == null)
{
  <p><em>Loading...</em></p>
}
else
{
  <div><a class="btn btn-primary oi oi-plus" href="/users/new"> New User</a></div>
  <div class="table-responsive">
    <table class="table">
      <thead>
        <tr>
          <th></th>
          <th>UserId</th>
          <th>Username</th>
          <th>Password</th>
          <th>Salt</th>
          <th>Email</th>
        </tr>
      </thead>
      <tbody>
        @foreach (var user in users)
        {
          <tr>
            <td>
              <a class="btn btn-primary oi oi-pencil" href="/users/edit/@user.UserId"> Edit</a>
              <a class="btn btn-danger oi oi-trash" href="/users/delete/@user.UserId"> Delete</a>
            </td>
            <td>@user.UserId</td>
            <td>@user.Username</td>
            <td>@user.PasswordHash</td>
            <td>@user.Salt</td>
            <td>@user.Email</td>
          </tr>
        }
      </tbody>
    </table>
  </div>
}

@code {
  private User[]? users;
  private string? exceptionMessage;

  protected override async Task OnInitializedAsync()
  {
    try
    {
      users = await Http.GetFromJsonAsync<User[]>("api/Users");
    }
    catch (Exception ex)
    {
      exceptionMessage = ex.Message;
    }
  }
}
